{"version":3,"sources":["components/Users.js","App.js","reportWebVitals.js","index.js"],"names":["StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","Users","state","sort_field","sort_order","filter_field","filter_value","data","User_Data","handleSortChange","event","target","getAttribute","handleStateChange","handleFilterChange","parseInt","value","isNaN","getClassName","field_name","setState","filter","element","toLowerCase","search","sort","sortByProperty","property","a","b","TableContainer","component","Paper","Table","aria-label","TableHead","className","this","align","onClick","col_id","type","onChange","TableBody","map","row","scope","id","first_name","last_name","email","gender","zip","name","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ff1dbf6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport User_Data from \"../db/MOCK_DATA.json\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nclass Users extends React.Component {\r\n    state = {\r\n      sort_field : \"id\",\r\n      sort_order : 0,\r\n      filter_field : \"id\" ,\r\n      filter_value : \"\",\r\n      data : User_Data\r\n    };\r\n\r\n    handleSortChange = event => {\r\n        let sort_field = event.target.getAttribute(\"col_id\");\r\n        let sort_order = (this.state.sort_field === sort_field ? 1-this.state.sort_order : 0);\r\n        \r\n        this.handleStateChange(sort_field, sort_order, this.state.filter_field, this.state.filter_value);\r\n    }\r\n\r\n    handleFilterChange = event => {\r\n        let filter_field = event.target.getAttribute(\"col_id\");\r\n        let filter_value = (filter_field === \"id\" ? parseInt(event.target.value) : event.target.value);\r\n        filter_value = (filter_field === \"id\" && isNaN(filter_value) ? \"\" : filter_value);\r\n\r\n        this.handleStateChange(this.state.sort_field, this.state.sort_order, filter_field, filter_value);\r\n    }\r\n\r\n    getClassName = field_name => {\r\n        return this.state.sort_field!==field_name?\"\":0===this.state.sort_order?\"headerSortUp\":\"headerSortDown\";\r\n    }\r\n\r\n    handleStateChange = (sort_field, sort_order, filter_field, filter_value) => {\r\n        this.setState({\r\n            sort_field:sort_field,\r\n            sort_order:sort_order,\r\n            filter_field:filter_field,\r\n            filter_value:filter_value,\r\n            //data:User_Data.filter(element => (element[filter_field] === (filter_value === \"\" ? element[filter_field] : filter_value)) || !(element[filter_field].toString().toLowerCase().search(filter_value.toString().toLowerCase())) ).sort(this.sortByProperty(sort_field, sort_order))\r\n            data:User_Data.filter(element => (element[filter_field] === (filter_value === \"\" ? element[filter_field] : filter_value)) || !(filter_field === \"id\" || element[filter_field].toLowerCase().search(filter_value.toLowerCase())) ).sort(this.sortByProperty(sort_field, sort_order))\r\n        });\r\n    }\r\n    \r\n\r\n\r\n    sortByProperty=(property, sort_order) => {  \r\n        return function(a,b){  \r\n           return (a[property] > b[property] ? (sort_order===0 ? 1 : -1) : (sort_order===0 ? -1 : 1));  \r\n        }  \r\n     }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <TableContainer component={Paper}>\r\n                <Table aria-label=\"customized table\">\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <StyledTableCell className={this.getClassName(\"id\")} align=\"right\" onClick={this.handleSortChange} col_id=\"id\">ID</StyledTableCell>\r\n                        <StyledTableCell className={this.getClassName(\"first_name\")} onClick={this.handleSortChange} col_id=\"first_name\">First Name</StyledTableCell>\r\n                        <StyledTableCell className={this.getClassName(\"last_name\")} onClick={this.handleSortChange} col_id=\"last_name\">Last Name</StyledTableCell>\r\n                        <StyledTableCell className={this.getClassName(\"email\")} onClick={this.handleSortChange} col_id=\"email\">Email</StyledTableCell>\r\n                        <StyledTableCell className={this.getClassName(\"gender\")} onClick={this.handleSortChange} col_id=\"gender\">Gender</StyledTableCell>\r\n                        <StyledTableCell className={this.getClassName(\"zip\")} align=\"right\" onClick={this.handleSortChange} col_id=\"zip\">Zip</StyledTableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                        <StyledTableCell align=\"right\"><input type=\"number\" onChange={this.handleFilterChange} col_id=\"id\" /></StyledTableCell>\r\n                        <StyledTableCell><input type=\"text\" onChange={this.handleFilterChange} col_id=\"first_name\" /></StyledTableCell>\r\n                        <StyledTableCell><input type=\"text\" onChange={this.handleFilterChange} col_id=\"last_name\" /></StyledTableCell>\r\n                        <StyledTableCell><input type=\"text\" onChange={this.handleFilterChange} col_id=\"email\" /></StyledTableCell>\r\n                        <StyledTableCell><input type=\"text\" onChange={this.handleFilterChange} col_id=\"gender\" /></StyledTableCell>\r\n                        <StyledTableCell align=\"right\"><input type=\"text\" onChange={this.handleFilterChange} col_id=\"zip\" /></StyledTableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {this.state.data.map((row) => (\r\n                        <StyledTableRow key={row.name}>\r\n                        <StyledTableCell component=\"th\" scope=\"row\" align=\"right\" >{row.id}</StyledTableCell>\r\n                        <StyledTableCell>{row.first_name}</StyledTableCell>\r\n                        <StyledTableCell>{row.last_name}</StyledTableCell>\r\n                        <StyledTableCell>{row.email}</StyledTableCell>\r\n                        <StyledTableCell>{row.gender}</StyledTableCell>\r\n                        <StyledTableCell align=\"right\">{row.zip}</StyledTableCell>\r\n                        </StyledTableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n                </TableContainer>\r\n            );\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nexport default Users;","import Users from './components/Users';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Users />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}